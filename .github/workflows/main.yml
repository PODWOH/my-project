name: Python CI/CD Pipeline

on:
  push:
    branches: [ main, development, release/* ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        python-version: ["3.8", "3.9", "3.10"]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        
    - name: Run tests with unittest
      run: |
        python -m unittest discover tests -v
        
    - name: Run tests with pytest
      run: |
        pip install pytest pytest-cov
        pytest tests/ --cov=src --cov-report=xml
        
    - name: Code quality check with flake8
      run: |
        pip install flake8
        flake8 src/ tests/ --count --select=E9,F63,F7,F82 --show-source --statistics
        flake8 src/ tests/ --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

  build:
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
        
    - name: Install dependencies
      run: |
        pip install -r requirements.txt
        
    - name: Create setup.py for build
      run: |
        cat > setup.py << EOF
        from setuptools import setup, find_packages
        
        setup(
            name="my-calculator",
            version="0.1.0",
            packages=find_packages(where="src"),
            package_dir={"": "src"},
        )
        EOF
        
    - name: Build package
      run: |
        python setup.py sdist bdist_wheel
        
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: python-package
        path: dist/

  lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
    - name: Lint with flake8
      run: |
        pip install flake8
        flake8 src/ tests/ --count --max-complexity=10 --max-line-length=127 --statistics

  documentation:
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Generate documentation
      run: |
        mkdir -p docs_build
        cp README.md docs_build/
        cp -r docs/* docs_build/ 2>/dev/null || true
        echo "Documentation generated at $(date)" > docs_build/build_info.txt
        
    - name: Upload documentation
      uses: actions/upload-artifact@v4
      with:
        name: documentation
        path: docs_build/